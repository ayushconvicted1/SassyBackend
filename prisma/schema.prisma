generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique @db.VarChar(255)
  name         String   @db.VarChar(100)
  avatar       Media?   @relation("UserAvatar")
  role         Role     @default(USER)
  zipCode      String?  @db.VarChar(10)
  addressLine1 String?  @db.VarChar(255)
  addressLine2 String?  @db.VarChar(255)
  city         String?  @db.VarChar(100)
  state        String?  @db.VarChar(100)
  country      String?  @db.VarChar(100)
  phoneNumber  String?  @db.VarChar(20)
  cart         Cart?
  orders       Order[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([email])
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String?       @db.Text
  price       Decimal       @db.Decimal(10, 2)
  stock       Int           @db.UnsignedInt
  images      Media[]       @relation("ProductImages")
  isAvailable Boolean       @default(true)
  category    Category?     @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  Int?
  cartItems   CartItem[]
  orderItems  OrderItem[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  sizes       ProductSize[]
  tags        ProductTag[]

  @@index([categoryId])
}

model Media {
  id        Int      @id @default(autoincrement())
  url       String   @db.VarChar(255)
  mimeType  String   @db.VarChar(50)
  type      String   @db.VarChar(50)
  createdAt DateTime @default(now())
  productId Int?
  product   Product? @relation("ProductImages", fields: [productId], references: [id], onDelete: Cascade)
  userId    Int?     @unique
  user      User?    @relation("UserAvatar", fields: [userId], references: [id], onDelete: Cascade)
}

model Size {
  id       Int           @id @default(autoincrement())
  name     String        @unique @db.VarChar(50)
  products ProductSize[]
}

model ProductSize {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  size      Size    @relation(fields: [sizeId], references: [id], onDelete: Cascade)
  sizeId    Int
  stock     Int     @default(0) @db.UnsignedInt
}

model Tag {
  id       Int          @id @default(autoincrement())
  name     String       @unique @db.VarChar(50)
  products ProductTag[]
}

model ProductTag {
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId     Int

  @@id([productId, tagId])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique @db.VarChar(100)
  products Product[]
}

model Cart {
  id     Int        @id @default(autoincrement())
  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int        @unique
  items  CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int     @default(1) @db.UnsignedInt
}

model Order {
  id              Int         @id @default(autoincrement())
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int
  items           OrderItem[]
  total           Decimal     @db.Decimal(10, 2)
  status          String      @default("pending") @db.VarChar(50)
  razorpayOrderId String?
  paymentId       String?
  waybillNumber   String?
  zipCode         String?     @db.VarChar(10)
  addressLine1    String?     @db.VarChar(255)
  addressLine2    String?     @db.VarChar(255)
  city            String?     @db.VarChar(100)
  state           String?     @db.VarChar(100)
  country         String?     @db.VarChar(100)
  phoneNumber     String?     @db.VarChar(20)
  email           String?     @db.VarChar(255)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int     @db.UnsignedInt
  size      String?
  price     Decimal @db.Decimal(10, 2)
}
